// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                String        @id @default(uuid())
  clerk_id          String        @unique
  email             String        @unique
  name              String?
  image_url         String?
  profile_image_url String?
  Expense           Expense[]
  UserExpense       UserExpense[]
  friends           User[]        @relation("UserFriends")

  // This second "side" of the UserFriends relation exists solely 
  // to satisfy prisma's requirements; we won't access it directly.
  symmetricFriends User[] @relation("UserFriends")

  @@index([id])
}

// model Friend {
//   id       String @id @default(uuid())
//   user     User   @relation(fields: [friendId], references: [clerk_id])
//   friendId String

//   @@unique([friendId])
// }

model Expense {
  id          String        @id @default(uuid())
  description String
  amount      Float
  groupId     String
  userId      String?
  Group       Group?        @relation(fields: [groupId], references: [id])
  User        User?         @relation(fields: [userId], references: [id])
  payers      UserExpense[]

  @@index([groupId])
  @@index([userId])
}

model UserExpense {
  userId    String  @map("user_id")
  expenseId String  @map("expense_id")
  user      User    @relation(fields: [userId], references: [id])
  expense   Expense @relation(fields: [expenseId], references: [id])

  @@id([userId, expenseId])
  @@index([userId])
  @@index([expenseId])
}

model Group {
  id      String    @id @default(uuid())
  title   String
  type    String?
  Expense Expense[]
}
